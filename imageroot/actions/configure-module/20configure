#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import os
import sys
import json
import uuid
import agent
import os.path
import agent.tasks

request = json.load(sys.stdin)

path = agent.get_env("PROMETHEUS_PATH", path)
if not path:
    path = uuid.uuid4().hex
    agent.set_env("PROMETHEUS_PATH", path)

# Configure Traefik to route "/prometheus" path requests to the prometheus service
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'],
        'url':  'http://127.0.0.1:' + os.environ["TCP_PORT"],
        'http2https': False,
        'lets_encrypt': False,
        'path': f'/{path}',
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)

# Do no overwrite existing config
if os.path.exists('prometheus.yml'):
    sys.exit(0)

# Setup default scraping for local node
rdb = agent.redis_connect()
default_instance = rdb.get(f'node/{os.environ["NODE_ID"]}/default_instance/node_exporter')
node_path = rdb.hget(f'module/{default_instance}/environment', 'NODE_EXPORTER_PATH')
with open('prometheus.yml', 'w') as fp:
    fp.write("global:\n")
    fp.write("scrape_configs:\n")
    fp.write('  - job_name: "node"\n')
    fp.write(f'    metrics_path: "{node_path}"\n')
    fp.write('    static_configs:\n')
    fp.write('      - targets: ["10.0.2.2"]\n')
