#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import os
import sys
import json
import uuid

import agent
import agent.tasks

request = json.load(sys.stdin)

PATH = uuid.uuid4().hex
agent.set_env("PROMETHEUS_PATH", PATH)

# Configure Traefik to route "/prometheus" path requests to the prometheus service
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'],
        'url': 'http://127.0.0.1:' + os.environ["TCP_PORT"],
        'http2https': False,
        'lets_encrypt': False,
        'path': f'/{PATH}',
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)

# Read loki config from local node env file or read it from redis
path = "/etc/nethserver/logcli.env"
if os.path.exists(path):
    logcli = agent.read_envfile(path)
else:
    # we are not on the Leader
    # This script must rely on local node resources to ensure service startup
    # even if the leader node is not reachable: connect to local Redis
    # replica.
    rdb = agent.redis_connect(use_replica=True)
    loki = rdb.get("cluster/default_instance/loki")
    logcli = rdb.hgetall(f'module/{loki}/environment')
    # we do not have exactly the same var name between redis and logcli.env
    logcli["LOKI_ADDR"] = logcli["LOKI_ADDR"]+':'+logcli["LOKI_HTTP_PORT"]
    logcli["LOKI_USERNAME"] = logcli['LOKI_API_AUTH_USERNAME']
    logcli["LOKI_PASSWORD"] =  logcli['LOKI_API_AUTH_PASSWORD']

with open('prometheus.yml', 'w', encoding='utf-8') as fp:
    fp.write("global:\n")
    fp.write("scrape_configs:\n")
    fp.write('  - job_name: "loki"\n')
    fp.write('    basic_auth:\n')
    fp.write(f'      username: "{logcli["LOKI_USERNAME"]}"\n')
    fp.write(f'      password: "{logcli["LOKI_PASSWORD"]}"\n')
    fp.write('    static_configs:\n')
    fp.write(f'      - targets: ["{logcli["LOKI_ADDR"].removeprefix("http://")}"]\n')
    fp.write('  - job_name: "providers"\n')
    fp.write('    file_sd_configs:\n')
    fp.write('      - files:\n')
    fp.write('        - "/prometheus/prometheus.d/*.yml"\n')

agent.run_helper('mkdir', 'prometheus.d')
